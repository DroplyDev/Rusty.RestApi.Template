{
  "runtime": "Net70",
  "defaultVariables": null,
  "documentGenerator": {
    "fromDocument": {
      "json": "{\r\n  \"openapi\": \"3.0.1\",\r\n  \"info\": {\r\n    \"title\": \"Test API\",\r\n    \"description\": \"Test API Description\",\r\n    \"license\": {\r\n      \"name\": \"Apache 2.0\",\r\n      \"url\": \"https://www.apache.org/licenses/LICENSE-2.0.html\"\r\n    },\r\n    \"version\": \"1.0\"\r\n  },\r\n  \"paths\": {\r\n    \"/api/v1/authentication/login\": {\r\n      \"post\": {\r\n        \"tags\": [\r\n          \"Authentication\"\r\n        ],\r\n        \"operationId\": \"Login\",\r\n        \"requestBody\": {\r\n          \"content\": {\r\n            \"application/json\": {\r\n              \"schema\": {\r\n                \"$ref\": \"#/components/schemas/LoginRequest\"\r\n              }\r\n            },\r\n            \"text/json\": {\r\n              \"schema\": {\r\n                \"$ref\": \"#/components/schemas/LoginRequest\"\r\n              }\r\n            },\r\n            \"application/*+json\": {\r\n              \"schema\": {\r\n                \"$ref\": \"#/components/schemas/LoginRequest\"\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Success\"\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"/api/v1/authentication/refresh-token\": {\r\n      \"post\": {\r\n        \"tags\": [\r\n          \"Authentication\"\r\n        ],\r\n        \"operationId\": \"RefreshToken\",\r\n        \"requestBody\": {\r\n          \"content\": {\r\n            \"application/json\": {\r\n              \"schema\": {\r\n                \"$ref\": \"#/components/schemas/RefreshTokenRequest\"\r\n              }\r\n            },\r\n            \"text/json\": {\r\n              \"schema\": {\r\n                \"$ref\": \"#/components/schemas/RefreshTokenRequest\"\r\n              }\r\n            },\r\n            \"application/*+json\": {\r\n              \"schema\": {\r\n                \"$ref\": \"#/components/schemas/RefreshTokenRequest\"\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Success\"\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"/api/v1/users/{id}\": {\r\n      \"delete\": {\r\n        \"tags\": [\r\n          \"Users\"\r\n        ],\r\n        \"summary\": \"Delete user\",\r\n        \"description\": \"Deletes existing user\",\r\n        \"operationId\": \"DeleteUserAsync\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"id\",\r\n            \"in\": \"path\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"integer\",\r\n              \"format\": \"int32\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"204\": {\r\n            \"description\": \"User deleted successfully\"\r\n          },\r\n          \"401\": {\r\n            \"description\": \"You need to authorize with jwt token before accessing secure endpoints\"\r\n          },\r\n          \"403\": {\r\n            \"description\": \"You do not have access to this endpoint\"\r\n          }\r\n        }\r\n      },\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Users\"\r\n        ],\r\n        \"summary\": \"Get user by id\",\r\n        \"description\": \"Returns paged list\",\r\n        \"operationId\": \"GetUserByIdAsync\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"id\",\r\n            \"in\": \"path\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"integer\",\r\n              \"format\": \"int32\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"User retrieved successfully\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/UserDto\"\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"401\": {\r\n            \"description\": \"You need to authorize with jwt token before accessing secure endpoints\"\r\n          },\r\n          \"403\": {\r\n            \"description\": \"You do not have access to this endpoint\"\r\n          }\r\n        }\r\n      },\r\n      \"put\": {\r\n        \"tags\": [\r\n          \"Users\"\r\n        ],\r\n        \"summary\": \"Update user\",\r\n        \"description\": \"Updates existing user\",\r\n        \"operationId\": \"UpdateUserAsync\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"id\",\r\n            \"in\": \"path\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"integer\",\r\n              \"format\": \"int32\"\r\n            }\r\n          }\r\n        ],\r\n        \"requestBody\": {\r\n          \"content\": {\r\n            \"application/json\": {\r\n              \"schema\": {\r\n                \"$ref\": \"#/components/schemas/UserUpdateDto\"\r\n              }\r\n            },\r\n            \"text/json\": {\r\n              \"schema\": {\r\n                \"$ref\": \"#/components/schemas/UserUpdateDto\"\r\n              }\r\n            },\r\n            \"application/*+json\": {\r\n              \"schema\": {\r\n                \"$ref\": \"#/components/schemas/UserUpdateDto\"\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"204\": {\r\n            \"description\": \"User updated successfully\"\r\n          },\r\n          \"400\": {\r\n            \"description\": \"You need to authorize with jwt token before accessing secure endpoints\"\r\n          },\r\n          \"401\": {\r\n            \"description\": \"You need to authorize with jwt token before accessing secure endpoints\"\r\n          },\r\n          \"403\": {\r\n            \"description\": \"You do not have access to this endpoint\"\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"/api/v1/users\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Users\"\r\n        ],\r\n        \"summary\": \"Get all users\",\r\n        \"description\": \"Returns trader list\",\r\n        \"operationId\": \"GetAllUsersAsync\",\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Users retrieved successfully\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"type\": \"array\",\r\n                  \"items\": {\r\n                    \"$ref\": \"#/components/schemas/UserDto\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"401\": {\r\n            \"description\": \"You need to authorize with jwt token before accessing secure endpoints\"\r\n          },\r\n          \"403\": {\r\n            \"description\": \"You do not have access to this endpoint\"\r\n          }\r\n        }\r\n      },\r\n      \"post\": {\r\n        \"tags\": [\r\n          \"Users\"\r\n        ],\r\n        \"summary\": \"Create new user\",\r\n        \"description\": \"Creates new user\",\r\n        \"operationId\": \"CreateUserAsync\",\r\n        \"requestBody\": {\r\n          \"content\": {\r\n            \"application/json\": {\r\n              \"schema\": {\r\n                \"$ref\": \"#/components/schemas/UserCreateDto\"\r\n              }\r\n            },\r\n            \"text/json\": {\r\n              \"schema\": {\r\n                \"$ref\": \"#/components/schemas/UserCreateDto\"\r\n              }\r\n            },\r\n            \"application/*+json\": {\r\n              \"schema\": {\r\n                \"$ref\": \"#/components/schemas/UserCreateDto\"\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"201\": {\r\n            \"description\": \"User created successfully\"\r\n          },\r\n          \"401\": {\r\n            \"description\": \"You need to authorize with jwt token before accessing secure endpoints\"\r\n          },\r\n          \"403\": {\r\n            \"description\": \"You do not have access to this endpoint\"\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"/api/v1/users/{username}\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Users\"\r\n        ],\r\n        \"summary\": \"Get user by username\",\r\n        \"description\": \"Returns user\",\r\n        \"operationId\": \"GetUserByUsernameAsync\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"username\",\r\n            \"in\": \"path\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"User retrieved successfully\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/UserDto\"\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"401\": {\r\n            \"description\": \"You need to authorize with jwt token before accessing secure endpoints\"\r\n          },\r\n          \"403\": {\r\n            \"description\": \"You do not have access to this endpoint\"\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"/api/v1/users/update/{id}\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Users\"\r\n        ],\r\n        \"summary\": \"Get user to update by id\",\r\n        \"description\": \"Returns user dto for update\",\r\n        \"operationId\": \"GetUserToUpdateByIdAsync\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"id\",\r\n            \"in\": \"path\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"integer\",\r\n              \"format\": \"int32\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"User retrieved successfully\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/UserUpdateDto\"\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"401\": {\r\n            \"description\": \"You need to authorize with jwt token before accessing secure endpoints\"\r\n          },\r\n          \"403\": {\r\n            \"description\": \"You do not have access to this endpoint\"\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"/api/v1/users/update/{username}\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Users\"\r\n        ],\r\n        \"summary\": \"Get user to update by username\",\r\n        \"description\": \"Returns user dto for update\",\r\n        \"operationId\": \"GetUserToUpdateByNameAsync\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"username\",\r\n            \"in\": \"path\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"User retrieved successfully\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/UserUpdateDto\"\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"401\": {\r\n            \"description\": \"You need to authorize with jwt token before accessing secure endpoints\"\r\n          },\r\n          \"403\": {\r\n            \"description\": \"You do not have access to this endpoint\"\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"/api/v1/users/paged\": {\r\n      \"post\": {\r\n        \"tags\": [\r\n          \"Users\"\r\n        ],\r\n        \"summary\": \"Get paged users\",\r\n        \"description\": \"Returns paged list\",\r\n        \"operationId\": \"GetPagedUsersAsync\",\r\n        \"requestBody\": {\r\n          \"content\": {\r\n            \"application/json\": {\r\n              \"schema\": {\r\n                \"$ref\": \"#/components/schemas/OrderedPagedRequest\"\r\n              }\r\n            },\r\n            \"text/json\": {\r\n              \"schema\": {\r\n                \"$ref\": \"#/components/schemas/OrderedPagedRequest\"\r\n              }\r\n            },\r\n            \"application/*+json\": {\r\n              \"schema\": {\r\n                \"$ref\": \"#/components/schemas/OrderedPagedRequest\"\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Users retrieved successfully\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/UserDtoPagedResponse\"\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"401\": {\r\n            \"description\": \"You need to authorize with jwt token before accessing secure endpoints\"\r\n          },\r\n          \"403\": {\r\n            \"description\": \"You do not have access to this endpoint\"\r\n          }\r\n        }\r\n      }\r\n    }\r\n  },\r\n  \"components\": {\r\n    \"schemas\": {\r\n      \"GroupDto\": {\r\n        \"required\": [\r\n          \"id\",\r\n          \"name\"\r\n        ],\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"id\": {\r\n            \"type\": \"integer\",\r\n            \"description\": \"The group id\",\r\n            \"format\": \"int32\"\r\n          },\r\n          \"name\": {\r\n            \"type\": \"string\",\r\n            \"description\": \"The group name\"\r\n          }\r\n        },\r\n        \"additionalProperties\": false,\r\n        \"description\": \"The dto for user retrieval \"\r\n      },\r\n      \"LoginRequest\": {\r\n        \"required\": [\r\n          \"password\",\r\n          \"username\"\r\n        ],\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"username\": {\r\n            \"minLength\": 1,\r\n            \"type\": \"string\"\r\n          },\r\n          \"password\": {\r\n            \"minLength\": 1,\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        \"additionalProperties\": false\r\n      },\r\n      \"OrderByData\": {\r\n        \"required\": [\r\n          \"orderBy\",\r\n          \"orderDirection\"\r\n        ],\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"orderBy\": {\r\n            \"minLength\": 1,\r\n            \"type\": \"string\"\r\n          },\r\n          \"orderDirection\": {\r\n            \"enum\": [\r\n              1,\r\n              2\r\n            ],\r\n            \"type\": \"integer\",\r\n            \"format\": \"int32\"\r\n          }\r\n        },\r\n        \"additionalProperties\": false\r\n      },\r\n      \"OrderedPagedRequest\": {\r\n        \"required\": [\r\n          \"orderByData\",\r\n          \"pageData\"\r\n        ],\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"pageData\": {\r\n            \"$ref\": \"#/components/schemas/PageData\"\r\n          },\r\n          \"orderByData\": {\r\n            \"$ref\": \"#/components/schemas/OrderByData\"\r\n          }\r\n        },\r\n        \"additionalProperties\": false\r\n      },\r\n      \"PageData\": {\r\n        \"required\": [\r\n          \"limit\",\r\n          \"offset\"\r\n        ],\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"offset\": {\r\n            \"minimum\": 0,\r\n            \"type\": \"integer\",\r\n            \"format\": \"int32\"\r\n          },\r\n          \"limit\": {\r\n            \"minimum\": 0,\r\n            \"type\": \"integer\",\r\n            \"format\": \"int32\"\r\n          }\r\n        },\r\n        \"additionalProperties\": false\r\n      },\r\n      \"RefreshTokenRequest\": {\r\n        \"required\": [\r\n          \"jwtToken\",\r\n          \"refreshToken\"\r\n        ],\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"jwtToken\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"refreshToken\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        \"additionalProperties\": false\r\n      },\r\n      \"UserCreateDto\": {\r\n        \"required\": [\r\n          \"email\",\r\n          \"password\",\r\n          \"userName\"\r\n        ],\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"userName\": {\r\n            \"maxLength\": 32,\r\n            \"minLength\": 8,\r\n            \"type\": \"string\",\r\n            \"description\": \"The user name. Has validation\"\r\n          },\r\n          \"password\": {\r\n            \"maxLength\": 32,\r\n            \"minLength\": 8,\r\n            \"type\": \"string\",\r\n            \"allOf\": [\r\n              {\r\n                \"pattern\": \"[A-Z]\"\r\n              },\r\n              {\r\n                \"pattern\": \"[a-z]\"\r\n              },\r\n              {\r\n                \"pattern\": \"[0-9]\"\r\n              },\r\n              {\r\n                \"pattern\": \"[^a-zA-Z0-9]\"\r\n              }\r\n            ],\r\n            \"description\": \"The user password. Has validation\"\r\n          },\r\n          \"email\": {\r\n            \"maxLength\": 255,\r\n            \"type\": \"string\",\r\n            \"description\": \"The user email\",\r\n            \"format\": \"email\"\r\n          },\r\n          \"groupId\": {\r\n            \"type\": \"integer\",\r\n            \"description\": \"The user group id\",\r\n            \"format\": \"int32\",\r\n            \"nullable\": true\r\n          }\r\n        },\r\n        \"additionalProperties\": false,\r\n        \"description\": \"The dto for user creation\"\r\n      },\r\n      \"UserDto\": {\r\n        \"required\": [\r\n          \"email\",\r\n          \"groupDto\",\r\n          \"id\",\r\n          \"userName\"\r\n        ],\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"id\": {\r\n            \"type\": \"integer\",\r\n            \"description\": \"The user id\",\r\n            \"format\": \"int32\"\r\n          },\r\n          \"userName\": {\r\n            \"type\": \"string\",\r\n            \"description\": \"The user name\"\r\n          },\r\n          \"email\": {\r\n            \"type\": \"string\",\r\n            \"description\": \"The user email\"\r\n          },\r\n          \"groupDto\": {\r\n            \"$ref\": \"#/components/schemas/GroupDto\"\r\n          }\r\n        },\r\n        \"additionalProperties\": false,\r\n        \"description\": \"The dto for user retrieval \"\r\n      },\r\n      \"UserDtoPagedResponse\": {\r\n        \"required\": [\r\n          \"data\",\r\n          \"totalCount\"\r\n        ],\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"data\": {\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"$ref\": \"#/components/schemas/UserDto\"\r\n            }\r\n          },\r\n          \"totalCount\": {\r\n            \"type\": \"integer\",\r\n            \"format\": \"int32\"\r\n          }\r\n        },\r\n        \"additionalProperties\": false\r\n      },\r\n      \"UserUpdateDto\": {\r\n        \"required\": [\r\n          \"email\",\r\n          \"id\"\r\n        ],\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"id\": {\r\n            \"minimum\": 0,\r\n            \"type\": \"integer\",\r\n            \"description\": \"The user id. Must be the same as in request\",\r\n            \"format\": \"int32\"\r\n          },\r\n          \"email\": {\r\n            \"maxLength\": 255,\r\n            \"type\": \"string\",\r\n            \"description\": \"The user email\",\r\n            \"format\": \"email\"\r\n          }\r\n        },\r\n        \"additionalProperties\": false,\r\n        \"description\": \"The dto for user edit\"\r\n      }\r\n    },\r\n    \"securitySchemes\": {\r\n      \"Bearer\": {\r\n        \"type\": \"http\",\r\n        \"description\": \"Put ONLY your JWT Bearer token in text box below!\",\r\n        \"scheme\": \"Bearer\",\r\n        \"bearerFormat\": \"JWT\"\r\n      }\r\n    }\r\n  },\r\n  \"security\": [\r\n    {\r\n      \"Bearer\": []\r\n    }\r\n  ]\r\n}",
      "url": "https://localhost:7269/swagger/../swagger/v1.0/swagger.json",
      "output": null,
      "newLineBehavior": "Auto"
    }
  },
  "codeGenerators": {
    "openApiToCSharpClient": {
      "clientBaseClass": null,
      "configurationClass": null,
      "generateClientClasses": true,
      "generateClientInterfaces": false,
      "clientBaseInterface": null,
      "injectHttpClient": true,
      "disposeHttpClient": true,
      "protectedMethods": [],
      "generateExceptionClasses": true,
      "exceptionClass": "SwaggerException",
      "wrapDtoExceptions": false,
      "useHttpClientCreationMethod": false,
      "httpClientType": "System.Net.Http.HttpClient",
      "useHttpRequestMessageCreationMethod": false,
      "useBaseUrl": false,
      "generateBaseUrlProperty": false,
      "generateSyncMethods": false,
      "generatePrepareRequestAndProcessResponseAsAsyncMethods": false,
      "exposeJsonSerializerSettings": false,
      "clientClassAccessModifier": "public",
      "typeAccessModifier": "public",
      "generateContractsOutput": false,
      "contractsNamespace": null,
      "contractsOutputFilePath": null,
      "parameterDateTimeFormat": "s",
      "parameterDateFormat": "yyyy-MM-dd",
      "generateUpdateJsonSerializerSettingsMethod": true,
      "useRequestAndResponseSerializationSettings": false,
      "serializeTypeInformation": false,
      "queryNullValue": "null",
      "className": "{controller}NSwagClient",
      "operationGenerationMode": "MultipleClientsFromOperationId",
      "additionalNamespaceUsages": [],
      "additionalContractNamespaceUsages": [],
      "generateOptionalParameters": true,
      "generateJsonMethods": false,
      "enforceFlagEnums": false,
      "parameterArrayType": "System.Collections.Generic.IEnumerable",
      "parameterDictionaryType": "System.Collections.Generic.IDictionary",
      "responseArrayType": "System.Collections.Generic.ICollection",
      "responseDictionaryType": "System.Collections.Generic.IDictionary",
      "wrapResponses": false,
      "wrapResponseMethods": [],
      "generateResponseClasses": true,
      "responseClass": "SwaggerResponse",
      "namespace": "Rusty.Template.Tests.Integration",
      "requiredPropertiesMustBeDefined": true,
      "dateType": "System.DateTimeOffset",
      "jsonConverters": null,
      "anyType": "object",
      "dateTimeType": "System.DateTimeOffset",
      "timeType": "System.TimeSpan",
      "timeSpanType": "System.TimeSpan",
      "arrayType": "System.Collections.Generic.ICollection",
      "arrayInstanceType": "System.Collections.ObjectModel.Collection",
      "dictionaryType": "System.Collections.Generic.IDictionary",
      "dictionaryInstanceType": "System.Collections.Generic.Dictionary",
      "arrayBaseType": "System.Collections.ObjectModel.Collection",
      "dictionaryBaseType": "System.Collections.Generic.Dictionary",
      "classStyle": "Poco",
      "jsonLibrary": "SystemTextJson",
      "generateDefaultValues": true,
      "generateDataAnnotations": true,
      "excludedTypeNames": [],
      "excludedParameterNames": [],
      "handleReferences": false,
      "generateImmutableArrayProperties": false,
      "generateImmutableDictionaryProperties": false,
      "jsonSerializerSettingsTransformationMethod": null,
      "inlineNamedArrays": false,
      "inlineNamedDictionaries": false,
      "inlineNamedTuples": true,
      "inlineNamedAny": false,
      "generateDtoTypes": false,
      "generateOptionalPropertiesAsNullable": true,
      "generateNullableReferenceTypes": false,
      "templateDirectory": null,
      "typeNameGeneratorType": null,
      "propertyNameGeneratorType": null,
      "enumNameGeneratorType": null,
      "serviceHost": null,
      "serviceSchemes": null,
      "output": null,
      "newLineBehavior": "Auto"
    }
  }
}